{
    "Core": {
        "baseRoute": "http://assistant-core:8080",
        "localRoute": [
            "http://localhost:8080",
            "http://127.0.0.1:8080"
        ],
        "requiredHeaders": {
            "Auth": [
                "frontendkey",
                "testingkey"
            ],
            "User-Agent": [
                "frontend",
                "test",
                "insomnia/10.1.0",
                "PostmanRuntime/7.41.0"
            ]
        }
    },
    "Alarmclock": {
        "setAlarm": {
            "note": null,
            "route": "/alarm-set",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "alarm_time": "<type>: string:= <format> 'HH:MM' "
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "timeUntilAlarm": {
            "note": null,
            "route": "/alarm-time-until-alarm",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "isAlarmTime": {
            "note": null,
            "route": "/alarm-is-alarm-time",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "healthcheck": {
            "note": null,
            "route": "/alarm-check-health",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "healthy"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        }
    },
    "TTS": {
        "requestAudio": {
            "note": null,
            "route": "/tts-file-play",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "input_text": "<type>: string",
                    "voice": "<type>: string"
                },
                "optional": {
                    "save_as_wave": "<type>: boolean"
                }
            },
            "params": null,
            "response": {
                "contentType": "audio/wav",
                "as_attachment": false,
                "body": {
                    "file": "___Msg{hash-value}.wav"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "requestAudioPlayed": {
            "note": "Should not be used, due to probably causing errors",
            "route": "/tts-played",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "input_text": "<type>: string",
                    "voice": "<type>: string"
                },
                "optional": {
                    "save_as_wave": "<type>: boolean"
                }
            },
            "params": null,
            "response": {
                "contentType": null,
                "as_attachment": null,
                "body": {
                    "file": null
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "requestAudioStreamed": {
            "note": "Should not be used, due to probably causing errors",
            "route": "/tts-streamed",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "input_text": "<type>: string",
                    "voice": "<type>: string"
                },
                "optional": {
                    "save_as_wave": "<type>: boolean"
                }
            },
            "params": null,
            "response": {
                "contentType": null,
                "as_attachment": null,
                "body": {
                    "file": null
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "requestAudioFile": {
            "note": null,
            "route": "/tts-file",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "input_text": "<type>: string",
                    "voice": "<type>: string"
                },
                "optional": {
                    "save_as_wave": "<type>: boolean"
                }
            },
            "params": null,
            "response": {
                "contentType": "audio/wav",
                "as_attachment": true,
                "body": {
                    "file": "___Msg{hash-value}.wav"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "healthcheck": {
            "note": null,
            "route": "/tts-check-health",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "healthy"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        }
    },
    "STT": {
        "requestTextMic": {
            "note": "Should not be used, due to probably causing errors",
            "route": "/stt-to-text-mic",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "text": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "requestTextMicContinuous": {
            "note": "Should not be used, due to probably causing errors",
            "route": "/stt-to-text-mic-continuous",
            "method": "GET",
            "contentType": "application/json",
            "body": {
                "required": {
                    "stop_key": [
                        "p",
                        "a",
                        "S"
                    ]
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "text": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "requestTextFile": {
            "note": null,
            "route": "/stt-to-text-file",
            "method": "POST",
            "contentType": "audio/wav",
            "body": {
                "required": {
                    "file": "[AudioRecording].wav"
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "text": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "requestTextFileContinuous": {
            "note": "Should not be used, due to probably causing errors",
            "route": "/stt-to-text-file-continuous",
            "method": "POST",
            "contentType": "audio/wav",
            "body": {
                "required": {
                    "file": "[AudioRecording].wav"
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "text": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "healthcheck": {
            "note": null,
            "route": "/stt-check-health",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "healthy"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        }
    },
    "News": {
        "requestNews": {
            "note": null,
            "route": "/news-news",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": [
                "inland",
                "ausland",
                "wirtschaft",
                "sport",
                "video",
                "investigativ",
                "wissen"
            ],
            "response": {
                "contentType": "application/json",
                "body": {
                    "recent_news": "[List of News-Objects]",
                    "recent_news_count": "<type>: integer"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "healthcheck": {
            "note": null,
            "route": "/news-check-health",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "healthy"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        }
    },
    "OpenAI": {
        "ask": {
            "note": null,
            "route": "/openai-ask",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "prompt": "<type>: string"
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "openai_answer": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "askHistory": {
            "note": null,
            "route": "/openai-ask-history",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "prompt": "<type>: string"
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "openai_answer": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "addMessageSystem": {
            "note": null,
            "route": "/openai-add-message-system",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "prompt": "<type>: string"
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "openai_answer": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "addMessageUser": {
            "note": null,
            "route": "/openai-add-message-user",
            "method": "POST",
            "contentType": "application/json",
            "body": {
                "required": {
                    "prompt": "<type>: string"
                }
            },
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "openai_answer": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "deleteHistory": {
            "note": null,
            "route": "/openai-delete-history",
            "method": "DELETE",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "openai_answer": "<type>: string"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "healthcheck": {
            "note": null,
            "route": "/openai-check-health",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "healthy"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        }
    },
    "Rapla": {
        "eventsTomorrow": {
            "note": null,
            "route": "/rapla-events-tomorrow",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "events": "[List of Event-Objects]"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "healthcheck": {
            "note": null,
            "route": "/rapla-check-health",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "healthy"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        }
    },
    "Weather": {
        "requestWeather": {
            "note": null,
            "route": "/weather-weather",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": "<type>: string:= [Name of place]",
            "response": {
                "contentType": "application/json",
                "body": {
                    "tempMax": "<type>: float",
                    "tempMin": "<type>: float",
                    "regen": "<type>: float"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        },
        "healthcheck": {
            "note": null,
            "route": "/weather-check-health",
            "method": "GET",
            "contentType": null,
            "body": null,
            "params": null,
            "response": {
                "contentType": "application/json",
                "body": {
                    "message": "healthy"
                }
            },
            "error": {
                "message": "<type>: string",
                "status_code": "http-status-code"
            }
        }
    },
    "Database": {
        "baseRoute": "/api/data",
        "AssistantUser": {
            "baseRoute": "/users",
            "getAll": {
                "note": null,
                "route": null,
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "users": "[List of AssistantUser-Objects]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "getAllContaining": {
                "note": null,
                "route": "/containing",
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": "{firstname} = <type>: string",
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "users": "[List of AssistantUser-Objects having specified firstname]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "findByEmail": {
                "note": null,
                "route": "/email",
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "users": "[List of AssistantUser-Objects having specified email]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "getOne": {
                "note": null,
                "route": "/{id}",
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "user": "[User-Object with specified id]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "post": {
                "note":null,
                "route":null,
                "method":"POST",
                "contentType":"application/json",
                "body":{
                    "firstname": "<type>: string",
                    "lastname": "<type>: string",
                    "email": "<type>: string - has unique constraint",
                    "age": "<type>: integer",
                    "place": "<type>: string",
                    "newsTopics": "Array of strings <must be one of the params for news>"
                },
                "params":null,
                "response": {
                    "contentType":"application/json",
                    "body":{
                        "user": "[User-Object that was created]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "put": {
                "note":null,
                "route":"/{id}",
                "method":"PUT",
                "contentType":"application/json",
                "body":{
                    "firstname": "<type>: string",
                    "lastname": "<type>: string",
                    "email": "<type>: string - has unique constraint",
                    "age": "<type>: integer",
                    "place": "<type>: string",
                    "newsTopics": "Array of strings <must be one of the params for news>"    
                },
                "params":null,
                "response":{
                    "contentType":"application/json",
                    "body":{
                        "user":"[User-Object that was created at specified id]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "deleteOne": {
                "note":null,
                "route":"/{id}",
                "method":"DELETE",
                "contentType":null,
                "body":null,
                "params":null,
                "response":{
                    "contentType":"application/json",
                    "body":{
                        "user":"[User-Object that was deleted at specified id]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "deleteAll": {
                "note":null,
                "route":null,
                "method":"DELETE",
                "contentType":null,
                "body":null,
                "params":null,
                "response": {
                    "contentType":null,
                    "body":null
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            }
        },
        "Deadline": {
            "baseRoute":"/deadlines",
            "getAll": {
                "note": null,
                "route": null,
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "users": "[List of Deadline-Objects]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "getAllOfUser": {
                "note": null,
                "route": "/users/{userId}/deadlines",
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "users": "[List of Deadline-Objects of user with specified id]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "getOne": {
                "note": null,
                "route": "/{id}",
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "user": "[Deadline-Object with specified id]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "post": {
                "note":null,
                "route":"/users/{userId}",
                "method":"POST",
                "contentType":"application/json",
                "body":{
                    "name": "<type>: string",
                    "date": "<type>: string",
                    "assistantUser": "<type>: AssistantUser [User to link deadline to]"
                },
                "params":null,
                "response": {
                    "contentType":"application/json",
                    "body":{
                        "user": "[Deadline-Object that was created]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "put": {
                "note":null,
                "route":"/{id}",
                "method":"PUT",
                "contentType":"application/json",
                "body":{
                    "name": "<type>: string",
                    "date": "<type>: string",
                    "assistantUser": "<type>: AssistantUser [User to link deadline to]"
                },
                "params":null,
                "response":{
                    "contentType":"application/json",
                    "body":{
                        "user":"[Deadline-Object that was created at specified id]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "deleteOne": {
                "note":null,
                "route":"/{id}",
                "method":"DELETE",
                "contentType":null,
                "body":null,
                "params":null,
                "response":{
                    "contentType":"application/json",
                    "body":{
                        "user":"[Deadline-Object that was deleted at specified id]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "deleteAllOfUser": {
                "note":null,
                "route":"/users/{userId}",
                "method":"DELETE",
                "contentType":null,
                "body":null,
                "params":null,
                "response": {
                    "contentType":"application/json",
                    "body": {
                        "deadlines": "[List of deadlines that were deleted]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            }
        },
        "Preference": {
            "baseRoute":"/preferences",
            "getAll": {
                "note": null,
                "route": null,
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "users": "[List of Preference-Objects]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "getAllOfUser": {
                "note": null,
                "route": "/users/{userId}/preferences",
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "users": "[List of Preference-Objects of user with specified id]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "getOne": {
                "note": null,
                "route": "/{id}",
                "method": "GET",
                "contentType": null,
                "body": null,
                "params": null,
                "response": {
                    "contentType": "application/json",
                    "body": {
                        "user": "[Preference-Object with specified id]"
                    }
                },
                "error": {
                    "message": "[Database issue or other]"
                }
            },
            "post": {
                "note":null,
                "route":"/users/{userId}",
                "method":"POST",
                "contentType":"application/json",
                "body":{
                    "priority": "<type>: Weight [LOW,MEDIUM,HIGH]",
                    "name": "<type>: string",
                    "assistantUser": "<type>: AssistantUser [User to link preference to]"
                },
                "params":null,
                "response": {
                    "contentType":"application/json",
                    "body":{
                        "user": "[Preference-Object that was created]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "put": {
                "note":null,
                "route":"/{id}",
                "method":"PUT",
                "contentType":"application/json",
                "body":{
                    "priority": "<type>: Weight [LOW,MEDIUM,HIGH]",
                    "name": "<type>: string",
                    "assistantUser": "<type>: AssistantUser [User to link Preference to]"
                },
                "params":null,
                "response":{
                    "contentType":"application/json",
                    "body":{
                        "user":"[Preference-Object that was created at specified id]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "deleteOne": {
                "note":null,
                "route":"/{id}",
                "method":"DELETE",
                "contentType":null,
                "body":null,
                "params":null,
                "response":{
                    "contentType":"application/json",
                    "body":{
                        "user":"[Preference-Object that was deleted at specified id]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            },
            "deleteAllOfUser": {
                "note":null,
                "route":"/users/{userId}",
                "method":"DELETE",
                "contentType":null,
                "body":null,
                "params":null,
                "response": {
                    "contentType":"application/json",
                    "body": {
                        "deadlines": "[List of Preferences that were deleted]"
                    }
                },
                "error":{
                    "message":"[Database issue or other]"
                }
            }

        }
    }
}